name: Python Tests

on: [push, pull_request]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  test:
    name: Python tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          java-package: jdk

      - name: Set JAVA_HOME
        run: echo "JAVA_HOME=$(dirname $(redlink -f $(which java))))" >> $GITHUB_ENV
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          export JAVA_HOME=$JAVA_HOME
          pytest ./tests --alluredir=allure-results --disable-warnings
        continue-on-error: true

      - name: Find Coverage File
        run: |
          python -c "
          import os
          from pathlib import Path
          import logging

          logging.basicConfig(level=logging.INFO)

          def find_coverage_file(root_dir=None):
              if root_dir is None:
                  root_dir = Path.cwd()

              target_file = 'swagger-coverage-dm-api-account.html'
              found_paths = []

              print(f'üîç –ü–æ–∏—Å–∫ —Ñ–∞–π–ª–∞ {target_file} –≤ {root_dir}')

              for current_path in root_dir.rglob(target_file):
                  if current_path.is_file():
                      found_paths.append(current_path)
                      print(f'‚úÖ –ù–∞–π–¥–µ–Ω: {current_path}')

              if not found_paths:
                  print('‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ—Ö–æ–∂–∏–µ —Ñ–∞–π–ª—ã:')
                  similar_files = list(root_dir.rglob('*coverage*.html')) + list(root_dir.rglob('*.html'))
                  for file_path in similar_files[:5]:
                      print(f'   - {file_path}')

              return found_paths

          # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–∏—Å–∫
          found = find_coverage_file()
          if found:
              print(f'üéØ –§–∞–π–ª –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤: {found[0].parent}')
          else:
              print('‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∏ –≤ –æ–¥–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏')
          "

      - name: Debug Directory Structure
        run: |
          echo "üìÇ –ü–æ–ª–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π:"
          find . -name "*coverage*" -o -name "*.html" | head -20
          echo ""
          echo "üìÇ –ö–æ—Ä–Ω–µ–≤–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è:"
          ls -la
      
      

      - name: Check if report exists
        run: |
          ls -la
          if [ -f "swagger-coverage-dm-api-account.html" ]; then
            echo "‚úÖ Report found"
          else
            echo "‚ùå Report not found"
            exit 1
          fi

      - name: Run Coverage
        if: always()
        run:
          python -m packages.notifier.bot

      - name: Archive allure results
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: allure-results
          retention-days: 1

  generate-report:
    runs-on: ubuntu-latest
    needs: test
    name: Generate report
    steps:
      - uses: actions/setup-java@v3
        with:
          distribution: 'microsoft'
          java-version: '17'
      - run: sudo wget https://github.com/allure-framework/allure2/releases/download/2.29.0/allure-2.29.0.tgz && sudo tar -xvzf allure-2.29.0.tgz -C /opt/ && sudo ln -s /opt/allure-2.29.0/bin/allure /usr/bin/allure
      - name: Download allure results
        uses: actions/download-artifact@v4
      - run: allure generate -c allure-results -o _site
      - name: Store report
        uses: actions/upload-artifact@v4
        with:
          name: _site
          path: _site
          retention-days: 1

  publish-report:
      runs-on: ubuntu-latest
      needs: generate-report
      name: Publish report
      steps:
        - uses: actions/checkout@v4
        - name: Download site report
          uses: actions/download-artifact@v4
        - name: Upload pages artifact
          uses: actions/upload-pages-artifact@v3
        - name: Deploy to GitHub Pages
          id: deployment
          uses: actions/deploy-pages@v4
        - run: echo "https://romanbokov.github.io/dm_api_account_tests/"

